bool isPalindrome(char * s){
    if(s == "")
        return 1;
    else
    {
        int i=0,flag=0,string_length=0;
        char* string = malloc((strlen(s)+1)*sizeof(char));
        char* reverse_string = malloc((strlen(s)+1)*sizeof(char));
        while(s[i] != '\0')
        {
            if(((int)s[i] > 64 && (int)s[i] < 91) || ((int)s[i] > 96 && (int)s[i] < 123) || ((int)s[i] > 47 && (int)s[i] < 58))
                string[string_length++] = tolower(s[i]);
            i++;
        } 
        string[string_length] = '\0';
        string_length--;
        i=0;
        while(string_length>=0)
        {
            reverse_string[i++] = string[string_length--]; 
        }
        reverse_string[i] = '\0';
        if(!strcmp(string,reverse_string))
            flag = 1;
        free(reverse_string);
        free(string);
        return flag;
    }
}


-------------------------------------------------------------------------------------------------------------------------------------------------------


bool isPalindrome(char * s){
    if(s == "")
        return 1;
    int i=0,j=strlen(s);
    while (j > i)
    {
        if ((s[i] >= 'a' && s[i] <= 'z') || (s[i] >= 'A' && s[i] <= 'Z') || (s[i] >= '0' && s[i] <= '9'))
        {
            if ((s[j] >= 'a' && s[j] <= 'z') || (s[j] >= 'A' && s[j] <= 'Z') || (s[j] >= '0' && s[j] <= '9'))
            {
                if (tolower(s[i++]) != tolower(s[j--]))
                    return 0;
            }
            else
                j--;
        }
        else
            i++;
    }
    return 1;
}

------------------------------------------------------------------------------------------------------------------------------------------------------------


bool isPalindrome(char * s){
    if(s == "")
        return 1;
    else
    {
        int i=0,length=0;
        char* string = malloc((strlen(s)+1)*sizeof(char));
        while(s[i] != '\0')
        {
            if((s[i] >= 'a' && s[i] <= 'z') || (s[i] >= 'A' && s[i] <= 'Z') || (s[i] >= '0' && s[i] <= '9'))
                string[length++] = tolower(s[i]);
            i++;
        } 
        string[length--] = '\0';
    i = 0;
    while (length > i)
    {
        if (string[i++] != string[length--])
        {
            free(string);
            return 0;
        }
    }
    free(string);
    return 1;
    }
}
